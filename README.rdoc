= optparse2

A re-implementation of [optparse][].

- API-compatible
- simpler implementation
- more flexibility

== install

**NOT YET COMPLETE**

== usage

**NOT YET COMPLETE**

== why?

I really love [optparse][].  It comes out of the box with [Ruby][]'s standard 
library and it does all of the things I need when parsing options.

Often times, to create a command-line tool, I'll use my [SimpleCLI][] gem to 
get support for things like ... help/usage documentation ... out of the box. 
But when it comes to parsing `--foo=bar` `-f bar` etc ... [optparse][] does 
the job just fine.

That said ... have you ever read the source code for [optparse][]? 
In Ruby 1.8.7, `optparse.rb` is **1,791** lines long!  Oh my dear lord! 
Even without comments, it's **875** lines of code.  That's long.

Why should you care?  Well, one time I needed to add support to [optparse][] 
to handle undefined arguments.  Instead of raising an exception, I wanted 
undefined arguments to either fall back to some catch-all or I wanted to 
redirect them to different arguments or even just leave them un-parsed. 
I figured that I could easily just include a new module with my functionality 
in OptionParser ... boy was I wrong!

So ... this is my attempt to create an API-compatible implementation of 
OptionParser, which is more flexible and a LOT simpler.

I might end up not supporting 100% of [optparse][]'s features, but I'll 
implement the features that 99% of people use.

[optparse]:  http://www.ruby-doc.org/stdlib/libdoc/optparse/rdoc/index.html
[ruby]:      http://www.ruby-lang.org
[simplecli]: http://github.com/remi/simplecli
